import logging

from aiogram import types, Router, F, Bot
from aiogram.fsm.context import FSMContext

from data.sqlite_men_questionnaire import MensQuestionnaires
from data.sqlite_woman_questionnaire import WomanQuestionnaires
from keyboards.inline import moderation_keyboard
from utils.auxiliary_module import moderator_text
from utils.states import UserIdState

logger = logging.getLogger(__name__)
db_men = MensQuestionnaires()
db_woman = WomanQuestionnaires()
main_admin_router = Router()


@main_admin_router.callback_query(F.data.in_(['approved', 'rejected']),
                                  UserIdState.USER_ID)
async def moderation_questionnaires(query: types.CallbackQuery,
                                    bot: Bot,
                                    state: FSMContext) -> None:
    data = await state.get_data()
    await state.clear()
    user_id = data.get('user_id')
    logger.info(f'user_id: {user_id}')
    if query.data == 'approved' and db_men.profile_exists(user_id=user_id):
        db_men.update_moderation(user_id=user_id, moderation='–û–¥–æ–±—Ä–µ–Ω–æ')
        await query.message.answer("‚úÖ–ê–Ω–∫–µ—Ç–∞ –æ–¥–æ–±—Ä–µ–Ω–∞")
        await query.answer()
        await bot.send_message(chat_id=user_id, text="‚úÖ–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –æ–¥–æ–±—Ä–µ–Ω–∞")
    elif query.data == 'approved' and db_woman.profile_exists(user_id=user_id):
        db_woman.update_moderation(user_id=user_id, moderation='–û–¥–æ–±—Ä–µ–Ω–æ')
        await query.message.answer("‚úÖ–ê–Ω–∫–µ—Ç–∞ –æ–¥–æ–±—Ä–µ–Ω–∞")
        await bot.send_message(chat_id=user_id, text="‚úÖ–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –æ–¥–æ–±—Ä–µ–Ω–∞")
        await query.answer()
    elif query.data == 'rejected' and db_men.profile_exists(user_id=user_id):
        db_men.update_moderation(user_id=user_id, moderation='–û—Ç–∫–ª–æ–Ω–µ–Ω–æ')
        await query.message.answer("üö´–ê–Ω–∫–µ—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞")
        await bot.send_message(chat_id=user_id, text="üö´–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞\n"
                                                     "–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∞–Ω–∫–µ—Ç—É –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ\n"
                                                     "‚úèÔ∏è–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É")
        await query.answer()
    elif query.data == 'rejected' and db_woman.profile_exists(user_id=user_id):
        db_woman.update_moderation(user_id=user_id, moderation='–û—Ç–∫–ª–æ–Ω–µ–Ω–æ')
        await query.message.answer("üö´–ê–Ω–∫–µ—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞")
        await bot.send_message(chat_id=user_id, text="üö´–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞\n"
                                                     "–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∞–Ω–∫–µ—Ç—É –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ\n"
                                                     "‚úèÔ∏è–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É")
        await query.answer()


@main_admin_router.callback_query(F.data.in_(['approved', 'rejected']))
async def not_moderation_questionnaires(query: types.CallbackQuery):
    await query.message.answer("–ê–Ω–∫–µ—Ç–∞ —É–∂–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞, –ª–∏–±–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–∏–ª –∞–Ω–∫–µ—Ç—É!")
    await query.answer()


@main_admin_router.message(F.text == "‚è©–°–ª–µ–¥—É—é—â–∞—è –∞–Ω–∫–µ—Ç–∞")
async def not_moderation_questionnaires(message: types.Message,
                                        state: FSMContext,
                                        bot: Bot) -> None:
    if db_men.select_profile(moderation="–ù–µ –ø—Ä–æ–º–æ–¥–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ"):
        questionnaires = db_men.select_profile(moderation="–ù–µ –ø—Ä–æ–º–æ–¥–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ")
        await state.set_state(UserIdState.USER_ID)
        await state.update_data(user_id=int(questionnaires[0]))
        await bot.send_photo(chat_id=message.chat.id, photo=questionnaires[1],
                             caption=moderator_text(questionnaires),
                             reply_markup=moderation_keyboard,
                             )
    elif db_woman.select_profile(moderation="–ù–µ –ø—Ä–æ–º–æ–¥–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ"):
        questionnaires = db_woman.select_profile(moderation="–ù–µ –ø—Ä–æ–º–æ–¥–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ")
        await state.set_state(UserIdState.USER_ID)
        await state.update_data(user_id=int(questionnaires[0]))
        await bot.send_photo(chat_id=message.chat.id, photo=questionnaires[1],
                             caption=moderator_text(questionnaires),
                             reply_markup=moderation_keyboard,
                             )
    else:
        await message.answer("üòé–í—Å–µ –∞–Ω–∫–µ—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã!")
