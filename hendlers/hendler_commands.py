import logging
import sqlite3

from aiogram import types, Router, F
from aiogram.filters import CommandStart

from data.sqlite_db_users import DatabaseUsers
from keyboards.replay import main_markup, edit_man_profile_markup, edit_woman_profile_markup

from data.sqlite_men_questionnaire import MensQuestionnaires
from data.sqlite_woman_questionnaire import WomanQuestionnaires

router_commands = Router()
db_men = MensQuestionnaires()
db_woman = WomanQuestionnaires()

logger = logging.getLogger(__name__)
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')


@router_commands.message(CommandStart())
async def get_start(message: types.Message) -> None:

    try:
        DatabaseUsers().add_user(
            user_id=message.from_user.id,
            user_name=message.from_user.first_name,
            user_url=message.from_user.url
        )
        await message.answer(f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}üòÑ\n"
                             f"–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ?\n"
                             f"\n"
                             f"<i>–ü—Ä–æ–¥–æ–ª–∂–∞—è, –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ:\n"
                             f"<a href='https://ya.ru'>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</a>\n"
                             f"–∏ <a href='https://ya.ru'>–ü–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ –Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>.</i>",
                             reply_markup=main_markup
                             )
    except (sqlite3.IntegrityError, sqlite3.OperationalError) as err:
        logger.error(err)
        logger.error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        if db_men.profile_exists(user_id=message.from_user.id):
            await message.answer(f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º {message.from_user.first_name}\n"
                                 f"–¢—ã —É–∂–µ –∑–∞–ø–æ–ª–Ω–∏–ª –∞–Ω–∫–µ—Ç—É –∞–Ω–∫–µ—Ç—É‚ùì\n"
                                 f"\n"
                                 f"<i>–ü—Ä–æ–¥–æ–ª–∂–∞—è, –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ:\n"
                                 f"<a href='...'>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</a> "
                                 f"–∏ <a href='...'>–ü–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>.</i>",
                                 reply_markup=edit_man_profile_markup
                                 )
        elif db_men.profile_exists(user_id=message.from_user.id):
            await message.answer(f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º {message.from_user.first_name}\n"
                                 f"–¢—ã —É–∂–µ –∑–∞–ø–æ–ª–Ω–∏–ª –∞–Ω–∫–µ—Ç—É –∞–Ω–∫–µ—Ç—É‚ùì\n"
                                 f"\n"
                                 f"<i>–ü—Ä–æ–¥–æ–ª–∂–∞—è, –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ:\n"
                                 f"<a href='...'>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</a> "
                                 f"–∏ <a href='...'>–ü–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>.</i>",
                                 reply_markup=edit_woman_profile_markup
                                 )
        else:
            await message.answer(f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º {message.from_user.first_name}\n"
                                 f"–£ —Ç–µ–±—è –Ω–µ—Ç  –∞–Ω–∫–µ—Ç—ã‚ùì\n"
                                 f"\n"
                                 f"<i>–ü—Ä–æ–¥–æ–ª–∂–∞—è, –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ:\n"
                                 f"<a href='...'>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</a> "
                                 f"–∏ <a href='...'>–ü–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>.</i>",
                                 reply_markup=main_markup
                                 )


@router_commands.message(F.text == '/help')
async def help_command(message: types.Message) -> None:
    await message.answer(f"- /start - –ù–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã;\n")
