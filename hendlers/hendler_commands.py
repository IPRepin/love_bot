import logging
import sqlite3

from aiogram import types, Router
from aiogram.filters import CommandStart

from data.sqlite_db_users import DatabaseUsers
from keyboards.replay import main_markup

router_commands = Router()

logger = logging.getLogger(__name__)
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')


@router_commands.message(CommandStart())
async def get_start(message: types.Message) -> None:

    try:
        DatabaseUsers().add_user(
            user_id=message.from_user.id,
            user_name=message.from_user.first_name,
            user_url=message.from_user.url
        )
        await message.answer(f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}üòÑ\n"
                             f"–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ?\n"
                             f"\n"
                             f"<i>–ü—Ä–æ–¥–æ–ª–∂–∞—è, –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ\n"
                             f"<a href='https://ya.ru'>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</a>\n"
                             f"–∏ <a href='https://ya.ru'>–ü–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ –Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>.</i>",
                             reply_markup=main_markup
                             )
    except (sqlite3.IntegrityError, sqlite3.OperationalError) as err:
        logger.error(err)
        await message.answer(f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º {message.from_user.first_name}\n"
                             f"–•–æ—á–µ—à –∑–∞–ø–æ–Ω–∏—Ç—å –µ—â–µ –æ–¥–Ω—É –∞–Ω–∫–µ—Ç—É‚ùì\n"
                             f"\n"
                             f"<i>–ü—Ä–æ–¥–æ–ª–∂–∞—è, –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ\n"
                             f"<a href='https://ya.ru'>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</a> "
                             f"–∏ <a href='https://ya.ru'>–ü–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>.</i>",
                             reply_markup=main_markup
                             )
