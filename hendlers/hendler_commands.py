import logging
import os
import sqlite3

from aiogram import types, Router, F
from aiogram.filters import CommandStart
from dotenv import load_dotenv

from data.sqlite_db_users import DatabaseUsers
from data.sqlite_men_questionnaire import MensQuestionnaires
from data.sqlite_woman_questionnaire import WomanQuestionnaires
from keyboards.replay import main_markup, edit_profile_markup

load_dotenv()
logger = logging.getLogger(__name__)
router_commands = Router()
db_men = MensQuestionnaires()
db_woman = WomanQuestionnaires()


@router_commands.message(CommandStart())
async def get_start(message: types.Message) -> None:
    try:
        if str(message.from_user.id) not in os.environ.get("ADMINS_ID").split(","):
            logger.info(os.environ.get("ADMINS_ID").split(","))
            DatabaseUsers().add_user(
                user_id=message.from_user.id,
                user_name=message.from_user.first_name,
                user_url=message.from_user.username,
            )
            await message.answer(f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}üëã\n"
                                 f"–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ?\n"
                                 f"\n"
                                 f"<i>–ü—Ä–æ–¥–æ–ª–∂–∞—è, –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ:\n"
                                 f"<a href='...'>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</a>"
                                 f" –∏ <a href='...'>–ü–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ –Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>.</i>",
                                 reply_markup=main_markup,
                                 disable_web_page_preview=True,
                                 )
        else:
            await message.answer(f"{message.from_user.first_name} –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞.\n"
                                 f"–í —ç—Ç–æ—Ç —á–∞—Ç –≤–∞–º –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∞–Ω–∫–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
    except (sqlite3.IntegrityError, sqlite3.OperationalError) as err:
        logger.error(err)
        logger.error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        if db_men.profile_exists(user_id=message.from_user.id):
            await message.answer(f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º {message.from_user.first_name}\n"
                                 f"‚úÖ–¢—ã —É–∂–µ –∑–∞–ø–æ–ª–Ω–∏–ª –∞–Ω–∫–µ—Ç—É –∞–Ω–∫–µ—Ç—É.\n"
                                 f"\n"
                                 f"<i>–ü—Ä–æ–¥–æ–ª–∂–∞—è, –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ:\n"
                                 f"<a href='...'>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</a> "
                                 f"–∏ <a href='...'>–ü–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>.</i>",
                                 reply_markup=edit_profile_markup,
                                 disable_web_page_preview=True,
                                 )
        elif db_woman.profile_exists(user_id=message.from_user.id):
            await message.answer(f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º {message.from_user.first_name}\n"
                                 f"‚úÖ–¢—ã —É–∂–µ –∑–∞–ø–æ–ª–Ω–∏–ª–∞ –∞–Ω–∫–µ—Ç—É –∞–Ω–∫–µ—Ç—É.\n"
                                 f"\n"
                                 f"<i>–ü—Ä–æ–¥–æ–ª–∂–∞—è, –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ:\n"
                                 f"<a href='...'>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</a> "
                                 f"–∏ <a href='...'>–ü–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>.</i>",
                                 reply_markup=edit_profile_markup,
                                 disable_web_page_preview=True,
                                 )
        else:
            await message.answer(f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º {message.from_user.first_name}\n"
                                 f"–£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ —Å–∏—Ö –ø–æ—Ä –∞–Ω–∫–µ—Ç—ãüòü\n"
                                 f"–î–∞–≤–∞–π –∑–∞–ø–æ–ª–Ω–∏–º?"
                                 f"\n"
                                 f"<i>–ü—Ä–æ–¥–æ–ª–∂–∞—è, –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ:\n"
                                 f"<a href='...'>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</a> "
                                 f"–∏ <a href='...'>–ü–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>.</i>",
                                 reply_markup=main_markup,
                                 disable_web_page_preview=True,
                                 )


@router_commands.message(F.text == '/help')
async def help_command(message: types.Message) -> None:
    await message.answer(f"- /start - –ù–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã;\n")
