"""–§—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
import logging

from aiogram import types, Router, F
from aiogram.fsm.context import FSMContext

from data.sqlite_men_questionnaire import MensQuestionnaires
from data.sqlite_woman_questionnaire import WomanQuestionnaires
from hendlers.states_man import add_photo as men_add_photo
from hendlers.states_woman import add_photo as women_add_photo
from keyboards.inline import buy_subscription_markup, support_button
from keyboards.replay import main_markup, edit_profile_markup

logger = logging.getLogger(__name__)
db_men = MensQuestionnaires()
db_woman = WomanQuestionnaires()
main_users_router = Router()


@main_users_router.callback_query(F.data.in_(['cancel', 'cancel_main']))
async def cancel_btn(query: types.CallbackQuery):
    if query.data == 'cancel':
        await query.message.answer("–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º\n"
                                   "\n"
                                   "<i>–ü—Ä–æ–¥–æ–ª–∂–∞—è, –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ\n"
                                   "<a href='https://znfkomstobot.tilda.ws/'>"
                                   "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</a></i>",
                                   reply_markup=main_markup
                                   )
        await query.answer()
    elif query.data == 'cancel_main':
        await query.message.answer('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                                   reply_markup=edit_profile_markup
                                   )
        await query.answer()


@main_users_router.message(F.text == 'üíû–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É')
async def buy_subscription(message: types.Message) -> None:
    await message.answer("–í–æ–∑–º–æ–∂–Ω–æ –í—ã –Ω–µ –≥–æ—Ç–æ–≤—ã –ø–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É,"
                         " –Ω–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º - "
                         "—ç—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –æ—Ñ–æ—Ä–º–∏–≤ –ø–æ–¥–ø–∏—Å–∫—É.\n",
                         reply_markup=buy_subscription_markup)


@main_users_router.message(F.text == "üóëÔ∏è–£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É")
async def delete_questionnaires(message: types.Message) -> None:
    logger.info("–§—É–Ω–∫—Ü–∏—è delete_questionnaires –≤—ã–∑–≤–∞–Ω–∞")
    logger.info(f"{message.from_user.id}")
    if db_men.profile_exists(user_id=message.from_user.id):
        db_men.delete_profile(user_id=message.from_user.id)
        await message.answer(f"{message.from_user.first_name}\n"
                             "–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.\n"
                             "–•–æ—Ç–∏—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –Ω–æ–≤—É—é?",
                             reply_markup=main_markup)
    elif db_woman.profile_exists(user_id=message.from_user.id):
        db_woman.delete_profile(user_id=message.from_user.id)
        await message.answer(f"{message.from_user.first_name}\n"
                             "–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.\n"
                             "–•–æ—Ç–∏—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –Ω–æ–≤—É—é?",
                             reply_markup=main_markup)
    else:
        logger.error("–§—É–Ω–∫—Ü–∏—è delete_questionnaires –≤—ã–∑–≤–∞–Ω–∞, –Ω–æ –Ω–µ —É–¥–∞–ª–∏–ª–∞ –∞–Ω–∫–µ—Ç—É")


@main_users_router.message(F.text == '‚úèÔ∏è–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É')
async def edit_questionnaires(message: types.Message, state: FSMContext) -> None:
    logger.info("–§—É–Ω–∫—Ü–∏—è edit_questionnaires –≤—ã–∑–≤–∞–Ω–∞")
    logger.info(f"{message.from_user.id}")
    if db_men.profile_exists(user_id=message.from_user.id):
        db_men.delete_profile(user_id=message.from_user.id)
        await men_add_photo(message, state)
    elif db_woman.profile_exists(user_id=message.from_user.id):
        db_woman.delete_profile(user_id=message.from_user.id)
        await women_add_photo(message, state)
    else:

        logger.error("–§—É–Ω–∫—Ü–∏—è edit_questionnaires –≤—ã–∑–≤–∞–Ω–∞, –Ω–æ –Ω–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª–∞ –∞–Ω–∫–µ—Ç—É")


@main_users_router.message(F.text == 'üì©–°–≤—è–∑–∞—Ç—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º')
async def write_administrator(message: types.Message) -> None:
    await message.answer(f"{message.from_user.first_name} –µ—Å–ª–∏ —É –≤–∞—Å "
                         f"–≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –∞–Ω–∫–µ—Ç—ã, —Å–≤—è–∂–∏—Ç–µ—Å—å "
                         f"—Å –Ω–∞–º–∏ –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚¨áÔ∏è",
                         reply_markup=support_button)
