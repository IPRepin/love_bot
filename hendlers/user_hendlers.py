"""–§—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
import logging

from aiogram import types, Router, F
from aiogram.fsm.context import FSMContext

from data.sqlite_men_questionnaire import MensQuestionnaires
from data.sqlite_woman_questionnaire import WomanQuestionnaires
from hendlers.states_man import add_photo as men_add_photo
from hendlers.states_woman import add_photo as women_add_photo
from keyboards.inline import buy_subscription_markup, go_to_free_chat
from keyboards.replay import main_markup, edit_profile_markup

logger = logging.getLogger(__name__)
db_men = MensQuestionnaires()
db_woman = WomanQuestionnaires()
main_users_router = Router()


@main_users_router.callback_query(F.data == 'cancel')
async def cancel_btn(query: types.CallbackQuery):
    await query.message.answer(f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º {query.message.from_user.first_name}\n"
                               f"–•–æ—á–µ—à –∑–∞–ø–æ–Ω–∏—Ç—å –µ—â–µ –æ–¥–Ω—É –∞–Ω–∫–µ—Ç—É‚ùì\n"
                               f"\n"
                               f"<i>–ü—Ä–æ–¥–æ–ª–∂–∞—è, –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ\n"
                               f"<a href='...'>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</a> "
                               f"–∏ <a href='...'>–ü–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>.</i>",
                               reply_markup=main_markup
                               )


@main_users_router.message(F.text == 'üíû–•–æ—á—É –ø–æ–¥–ø–∏—Å–∫—É')
async def buy_subscription(message: types.Message) -> None:
    await message.answer(f"(–£—Å–ª–æ–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏)\n", reply_markup=buy_subscription_markup)


@main_users_router.message(F.text == "üóëÔ∏è–£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É")
async def delete_questionnaires(message: types.Message) -> None:
    logger.info(f"–§—É–Ω–∫—Ü–∏—è delete_questionnaires –≤—ã–∑–≤–∞–Ω–∞")
    logger.info(f"{message.from_user.id}")
    if db_men.profile_exists(user_id=message.from_user.id):
        db_men.delete_profile(user_id=message.from_user.id)
        await message.answer(f"{message.from_user.first_name}\n"
                             f"–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.\n"
                             f"–•–æ—Ç–∏—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –Ω–æ–≤—É—é?",
                             reply_markup=main_markup)
    elif db_woman.profile_exists(user_id=message.from_user.id):
        db_woman.delete_profile(user_id=message.from_user.id)
        await message.answer(f"{message.from_user.first_name}\n"
                             f"–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.\n"
                             f"–•–æ—Ç–∏—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –Ω–æ–≤—É—é?",
                             reply_markup=main_markup)
    else:
        logger.error(f"–§—É–Ω–∫—Ü–∏—è delete_questionnaires –≤—ã–∑–≤–∞–Ω–∞, –Ω–æ –Ω–µ —É–¥–∞–ª–∏–ª–∞ –∞–Ω–∫–µ—Ç—É")


@main_users_router.message(F.text == '‚úèÔ∏è–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É')
async def edit_questionnaires(message: types.Message, state: FSMContext) -> None:
    logger.info(f"–§—É–Ω–∫—Ü–∏—è edit_questionnaires –≤—ã–∑–≤–∞–Ω–∞")
    logger.info(f"{message.from_user.id}")
    if db_men.profile_exists(user_id=message.from_user.id):
        db_men.delete_profile(user_id=message.from_user.id)
        await men_add_photo(message, state)
    elif db_woman.profile_exists(user_id=message.from_user.id):
        db_woman.delete_profile(user_id=message.from_user.id)
        await women_add_photo(message, state)
    else:
        logger.error(f"–§—É–Ω–∫—Ü–∏—è edit_questionnaires –≤—ã–∑–≤–∞–Ω–∞, –Ω–æ –Ω–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª–∞ –∞–Ω–∫–µ—Ç—É")


@main_users_router.message(F.text == 'üíò–ù–∞–π—Ç–∏ –ø–∞—Ä—É')
async def find_couple(message: types.Message) -> None:
    await message.answer(f"{message.from_user.first_name} –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –≤ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –≥—Ä—É–ø–ø—É —Å –∞–Ω–∫–µ—Ç–∞–º–∏.\n"
                         f"–õ–∏–±–æ –ø—Ä–µ–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É —Å –∞–Ω–∫–µ—Ç–∞–º–∏ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —Å–æ–∏—Å–∫–∞—Ç–µ–ª–µ–π.\n",
                         reply_markup=go_to_free_chat)
